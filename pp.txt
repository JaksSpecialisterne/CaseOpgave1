###TILGANG OG OPBYGNING###
Splittede opgaven op i mindre delen som kunne arbejdes på individuelt uden at at træde hinanden over tæerne.

lavede stump funktioner som vi regnede med at skulle bruge på i de individuelle klasser

Tilføjede ting til klasserne som det gik op for os at vi manglede dem

Vi have en lille diskution til at started med omkring de forskellige klasser, især struktur af klasser og struktur af data for brugere og bøger
, ellers kom de bare organisk

ift. pattern fik vi brugt strategy ved søgning af bøger i library klassen og skulle have brugt observer til at notificere brugere som har
reservation på afleveret bog men havde problemer med at ændre data så den blev ikke færdig

vi kunne ikke finde brug til decorator pattern i vores tilfælde, vi have kort tænkt brug kunne være at sætte tags på til system admins og 
dårlige brugere.


Det hele er splitte op i 3 "dele", selve systemet, vores databaser og hjælpe klasser.


###DATABASE###
TIl database brugte vi pandas dataframe som database, denne gemmes og loades fra en excel fil så der opretholdes data mellem 
åbning og lukning af programmet

havde lidt problemer med at få den til at interprete tomme lister og andre værdier til de rigtige ting.

For både bøger og brugere har vi nogen felter som ikke bruges til så meget ud over at være beskrivene, de er vores "passive" felter,
vi har også "aktive" felter som bruges aktivt til at tjekke reservation, hvorvidt en bog er lånt, logge ting osv.
Vi snakkede om mulighed for at rette i disse "passive" felter men prioriterede andre ting


###SYSTEMET###
Systmete køre fra en overordnet UI menu som samler de andre klasses. Klasserne gøre ikke brug af hinanden på tværs men i stedet køres alt
gennem UI menu.

Startede med en book class men endte med at dens funktionallitet blev indført library klassen da de gav bedre mening ift. implementeringen
af databasen

Generelt de ting der bliver gjort er følgende: tilføj log til bog eller bruger, tilføje reservation til bog eller bruger eller ændre bog 
availabillity.
Dertil er en masse hjælpe funktioner som tjekker hvorvidt de er tilladt at gøre disse ting.

Der er også generelle funktioner som hjælper med at søge, se og gå igennem bøger for at finde det man leder efter
Dertil er der også hjælpe funktioner som gør ting som f.eks. at sikre at givent input er "lovligt"


###HJÆLPE KLASSER###
Vi har to hjælpe klasser som skaber noget data for os som vi kan bruge, den ene laver en liste af users som så kan logge ind og bruges systemet osv
Den anden laver en excel fil vi fandt over bøger til en anden excel fil som kan bruges af vores system.	
